/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rianrs;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Scanner;
import java.awt.*;
import static java.lang.Boolean.TRUE;

/**
 *
 * @author Lenovo
 */
public class rumahsakit extends javax.swing.JFrame {

    DefaultTableModel tabModel;
    ResultSet RsSakit = null;

    public rumahsakit() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation((screenSize.width - frameSize.width) / 2,
                (screenSize.height = screenSize.height) / 20);
        tampilData();
        SetEditOff();
    }

    private void tampilData() {
        try {
            Object[] judul_kolom = {"ID", "Nama Pasien", "Diagnosa", "Hasil Pemeriksaan", "Umur", "Dokter", "Tanggungan", "Jumlah Bayar"};
            tabModel = new DefaultTableModel(null, judul_kolom);
            TableRs.setModel(tabModel);

            Connection conn = (Connection) koneksi.koneksiDB();
            Statement stt = conn.createStatement();
            tabModel.getDataVector().removeAllElements();

            RsSakit = stt.executeQuery("SELECT * from bayardiagnosa");
            while (RsSakit.next()) {
                Object[] data = {
                    RsSakit.getString("id"),
                    RsSakit.getString("nama_pasien"),
                    RsSakit.getString("diagnosa"),
                    RsSakit.getString("hasil_periksa"),
                    RsSakit.getString("umur"),
                    RsSakit.getString("dokter"),
                    RsSakit.getString("jenis_tanggungan"),
                    RsSakit.getString("jumlahbayar"),};
                tabModel.addRow(data);
            }

        } catch (Exception ex) {
            System.err.println(ex.getMessage());
        }
        jTextDiagnosa.setEnabled(false);
        jTextDokter.setEnabled(false);
        jTextFieldJumBayar.setEnabled(false);
        jTextHasil.setEnabled(false);
        jTextNama.setEnabled(false);
        jTextUmur.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jLabelNama = new javax.swing.JLabel();
        jLabelDiagnosa = new javax.swing.JLabel();
        jLabelHasil = new javax.swing.JLabel();
        jLabelUmur = new javax.swing.JLabel();
        jTextNama = new javax.swing.JTextField();
        jTextDiagnosa = new javax.swing.JTextField();
        jTextHasil = new javax.swing.JTextField();
        jTextUmur = new javax.swing.JTextField();
        jLabelDokter = new javax.swing.JLabel();
        jTextDokter = new javax.swing.JTextField();
        jComboBoxJentang = new javax.swing.JComboBox<>();
        jLabelTanggung = new javax.swing.JLabel();
        jTextFieldJumBayar = new javax.swing.JTextField();
        jLabelJumBayar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableRs = new javax.swing.JTable();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        jButtonAdd = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jTextFieldId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FORM PEMBAYARAN DATA PASIEN");
        setBackground(new java.awt.Color(153, 255, 255));

        jLabelNama.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelNama.setText("Nama Pasien");

        jLabelDiagnosa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelDiagnosa.setText("Diagnosa");

        jLabelHasil.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelHasil.setText("Hasil Pemeriksaan");

        jLabelUmur.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelUmur.setText("Umur");

        jTextNama.setText(" ");
        jTextNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNamaActionPerformed(evt);
            }
        });

        jTextHasil.setText(" ");

        jTextUmur.setText(" ");

        jLabelDokter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelDokter.setText("Dokter");

        jTextDokter.setText(" ");

        jComboBoxJentang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BPJS KESEHATAN", "JAM KESMAS", "" }));
        jComboBoxJentang.setSelectedIndex(1);
        jComboBoxJentang.setToolTipText("");
        jComboBoxJentang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxJentangActionPerformed(evt);
            }
        });

        jLabelTanggung.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelTanggung.setText("Jenis Tanggungan");

        jTextFieldJumBayar.setText(" ");

        jLabelJumBayar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelJumBayar.setText("Jumlah Bayar");

        TableRs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Nama Pasien", "Diagnosa", "Hasil Pemeriksaan", "Umur", "Dokter", "Tanggungan", "Jumlah Bayar"
            }
        ));
        TableRs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableRsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TableRs);

        label1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label1.setText("Sistem Pembayaran Hasil Dianosa");

        label2.setText("Jl Pasisia selatan indah no .12 ");

        label3.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label3.setText("Rumah Sakit Susudi ");

        jButtonAdd.setBackground(new java.awt.Color(51, 0, 255));
        jButtonAdd.setForeground(new java.awt.Color(153, 0, 0));
        jButtonAdd.setText("Add New");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonSave.setText("Simpan");
        jButtonSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSaveMouseClicked(evt);
            }
        });
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jTextFieldId.setText(" ");
        jTextFieldId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 891, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jButtonAdd)
                                .addGap(29, 29, 29)
                                .addComponent(jButtonSave)
                                .addGap(28, 28, 28)
                                .addComponent(jButtonDelete)
                                .addGap(40, 40, 40)
                                .addComponent(jButtonUpdate))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(264, 264, 264)
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelHasil)
                            .addComponent(jLabelDiagnosa)
                            .addComponent(jLabelNama)
                            .addComponent(jLabelUmur))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextDiagnosa)
                            .addComponent(jTextHasil, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                            .addComponent(jTextNama, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextUmur))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabelTanggung)
                    .addComponent(jLabelDokter)
                    .addComponent(jLabelJumBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jComboBoxJentang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldJumBayar, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextDokter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNama))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextDiagnosa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDiagnosa))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelHasil)
                            .addComponent(jTextHasil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextUmur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelUmur))
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextDokter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(jLabelDokter)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelTanggung)
                                    .addComponent(jComboBoxJentang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelJumBayar)
                                    .addComponent(jTextFieldJumBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonDelete)
                    .addComponent(jButtonUpdate))
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        label1.getAccessibleContext().setAccessibleName("  ");

        pack();
    }// </editor-fold>//GEN-END:initComponents
//manangani proses ketika button di click 


    private void jComboBoxJentangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxJentangActionPerformed

// TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxJentangActionPerformed

//fungsi untuk tambah data
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        BersihData();
        jTextNama.requestFocus();
        jTextFieldId.setEnabled(false);
        jButtonSave.setEnabled(true);
        jButtonUpdate.setEnabled(false);
        jButtonDelete.setEnabled(false);
        setEditOn();
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTextNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNamaActionPerformed


    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        // TODO add your handling code here: 
        String Diagnosa = jTextDiagnosa.getText();
        String Dokter = jTextDokter.getText();
        String JumBayar = jTextFieldJumBayar.getText();
        String Hasil = jTextHasil.getText();
        String Nama = jTextNama.getText();
        String Umur = jTextUmur.getText();
        String Tanggungan = jComboBoxJentang.getSelectedItem().toString();

        java.util.Date tanggal = new java.util.Date();
        java.text.SimpleDateFormat TanggalFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String CreateDate = TanggalFormat.format(tanggal);

        if (Diagnosa.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Diagnosa pasien tidak boleh kosong");
        } else if (Dokter.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Diagnosa pasien tidak boleh kosong");
        } else if (JumBayar.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Jum Bayar pasien tidak boleh kosong");
        } else if (Hasil.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hasil Diagnosa pasien tidak boleh kosong");
        } else if (Nama.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama pasien tidak boleh kosong");
        } else if (Umur.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Umur pasien tidak boleh kosong");
        } else if (!(new Scanner(Umur).hasNextInt())) {
            JOptionPane.showMessageDialog(null, "Umur Harus berupa angka");
            jTextUmur.requestFocus();
        } else if (!(new Scanner(JumBayar).hasNextInt())) {
            JOptionPane.showMessageDialog(null, "Jumlah Bayar Harus berupa angka");
            jTextFieldJumBayar.requestFocus();
        } else {
            //if handling complete
            try {
                Connection connection = (Connection) koneksi.koneksiDB();
                Statement stt = connection.createStatement();
                stt.executeUpdate("INSERT INTO tugas_kuliah.bayardiagnosa(nama_pasien, diagnosa, hasil_periksa, umur, dokter, jenis_tanggungan, jumlahbayar)"
                        + "        VALUES ('" + Nama + "', '" + Diagnosa + "', '" + Hasil + "', '" + Umur + "', '" + Dokter + "', '" + Tanggungan + "', '" + JumBayar + "');");
                tampilData();
                setEditOn();
                BersihData();

                JOptionPane.showMessageDialog(this, "Data berhasil disimpan", "Success", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Simpan data gagal\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSaveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSaveMouseClicked

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here: 
        String Diagnosa = jTextDiagnosa.getText();
        String Dokter = jTextDokter.getText();
        String JumBayar = jTextFieldJumBayar.getText();
        String Hasil = jTextHasil.getText();
        String Nama = jTextNama.getText();
        String Umur = jTextUmur.getText();

        java.util.Date tanggal = new java.util.Date();
        java.text.SimpleDateFormat TanggalFormat = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String CreateDate = TanggalFormat.format(tanggal);

        if (Diagnosa.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Diagnosa pasien tidak boleh kosong");
        } else if (Dokter.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Diagnosa pasien tidak boleh kosong");
        } else if (JumBayar.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Jum Bayar pasien tidak boleh kosong");
        } else if (Hasil.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hasil Diagnosa pasien tidak boleh kosong");
        } else if (Nama.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nama pasien tidak boleh kosong");
        } else if (Umur.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Umur pasien tidak boleh kosong");
        } else if (!(new Scanner(Umur).hasNextInt())) {
            JOptionPane.showMessageDialog(null, "Umur Harus berupa angka");
            jTextUmur.requestFocus();
        } else if (!(new Scanner(JumBayar).hasNextInt())) {
            JOptionPane.showMessageDialog(null, "Jumlah Bayar Harus berupa angka");
            jTextFieldJumBayar.requestFocus();
        } else {
            //if handling complete
            try {
                Connection connection = (Connection) koneksi.koneksiDB();
                Statement stt = connection.createStatement();
                stt.executeUpdate("UPDATE tugas_kuliah.bayardiagnosa SET nama_pasien ='" + Nama + "', diagnosa='" + Diagnosa + "', hasil_periksa='" + Hasil + "', umur='" + Umur + "', dokter='" + Dokter + "', jenis_tanggungan='NULL', jumlahbayar='" + JumBayar + "'");
                tampilData();
                setEditOn();
                BersihData();

                JOptionPane.showMessageDialog(this, "Data berhasil update", "Success", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Simpan data gagal\n" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void TableRsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableRsMouseClicked
        // TODO add your handling code here:
        setEditOn();
        tblKeForm();
        jButtonSave.setEnabled(false);
        jButtonUpdate.setEnabled(true);
    }//GEN-LAST:event_TableRsMouseClicked

    private void jTextFieldIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        String IdRs = jTextFieldId.getText();
        if (IdRs.isEmpty()) {
            JOptionPane.showMessageDialog(this, "ID Kosong Data Gagal Di Hapus.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int des = JOptionPane.showConfirmDialog(null, "Apakah anda yakin menghapus data ini ?", "Your title", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (des == 0) {
                try {
                    Connection connection = (Connection) koneksi.koneksiDB();
                    Statement stt = connection.createStatement();
                    stt.executeUpdate("DELETE from tugas_kuliah.bayardiagnosa where id ='" + IdRs + "'");
                    tampilData();
                    setEditOn();
                    BersihData();

                    JOptionPane.showMessageDialog(this, "Data berhasil hapus", "Success", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Simpan data gagal\n di hapus" + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(rumahsakit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(rumahsakit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(rumahsakit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(rumahsakit.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new rumahsakit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableRs;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxJentang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDiagnosa;
    private javax.swing.JLabel jLabelDokter;
    private javax.swing.JLabel jLabelHasil;
    private javax.swing.JLabel jLabelJumBayar;
    private javax.swing.JLabel jLabelNama;
    private javax.swing.JLabel jLabelTanggung;
    private javax.swing.JLabel jLabelUmur;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextDiagnosa;
    private javax.swing.JTextField jTextDokter;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldJumBayar;
    private javax.swing.JTextField jTextHasil;
    private javax.swing.JTextField jTextNama;
    private javax.swing.JTextField jTextUmur;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    // End of variables declaration//GEN-END:variables

//add function list data java 
    //non aktif kan ketika program tidak di eksekusi
    private void SetEditOff() {
        jTextDiagnosa.setEnabled(false);
        jTextDokter.setEnabled(false);
        jTextFieldJumBayar.setEnabled(false);
        jTextHasil.setEnabled(false);
        jTextNama.setEnabled(false);
        jTextUmur.setEnabled(false);
    }

    private void setEditOn() {
        jTextDiagnosa.setEnabled(true);
        jTextDokter.setEnabled(true);
        jTextFieldJumBayar.setEnabled(true);
        jTextHasil.setEnabled(true);
        jTextNama.setEnabled(true);
        jTextUmur.setEnabled(true);
    }

    private void tblKeForm() {

        jTextFieldId.setText(tabModel.getValueAt(TableRs.getSelectedRow(), 0) + "");

        jTextNama.setText(tabModel.getValueAt(TableRs.getSelectedRow(), 1) + "");
        jTextDiagnosa.setText(tabModel.getValueAt(TableRs.getSelectedRow(), 2) + "");
        jTextHasil.setText(tabModel.getValueAt(TableRs.getSelectedRow(), 3) + "");
        jTextUmur.setText(tabModel.getValueAt(TableRs.getSelectedRow(), 4) + "");
        jTextDokter.setText(tabModel.getValueAt(TableRs.getSelectedRow(), 5) + "");
        jComboBoxJentang.setSelectedItem(tabModel.getValueAt(TableRs.getSelectedRow(), 6) + "");
        jTextFieldJumBayar.setText(tabModel.getValueAt(TableRs.getSelectedRow(), 7) + "");

        jTextFieldId.setEnabled(false);
        jButtonAdd.setEnabled(true);
        jButtonDelete.setEnabled(true);
        jButtonSave.setEnabled(true);
        jButtonUpdate.setEnabled(false);
    }

    private void BersihData() {
        jTextDiagnosa.setText("");
        jTextDokter.setText("");
        jTextFieldJumBayar.setText("");
        jTextHasil.setText("");
        jTextNama.setText("");
        jTextUmur.setText("");
    }

}
